import os
import json
import requests
import zipfile
from bs4 import BeautifulSoup

DOWNLOAD_DIR = "ctc/dump"
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

def get_extension_ids(category_url):
    """Extrai os IDs das extensões de uma categoria da Chrome Web Store."""
    response = requests.get(category_url)
    soup = BeautifulSoup(response.text, 'html.parser')
    
    extension_ids = []
    for link in soup.find_all('a', href=True):
        if '/detail/' in link['href']:
            extension_id = link['href'].split('/')[-1]
            extension_ids.append(extension_id)
    
    return list(set(extension_ids))

def download_extension(extension_id):
    """Baixa a extensão no formato CRX."""
    url = f"https://clients2.google.com/service/update2/crx?response=redirect&prodversion=91.0&acceptformat=crx2,crx3&x=id%3D{extension_id}%26uc"
    response = requests.get(url, stream=True)
    
    if response.status_code == 200:
        crx_path = os.path.join(DOWNLOAD_DIR, f"{extension_id}.crx")
        with open(crx_path, 'wb') as file:
            file.write(response.content)
        return crx_path
    
    return None

def extract_manifest(crx_path):
    """Extrai o manifest.json de um arquivo CRX."""
    with zipfile.ZipFile(crx_path, 'r') as zip_ref:
        for file in zip_ref.namelist():
            if 'manifest.json' in file:
                with zip_ref.open(file) as manifest_file:
                    return json.load(manifest_file)
    return None

def save_all_manifests(manifests):
    """Salva todas as informações das extensões em um único arquivo JSON."""
    json_path = os.path.join(DOWNLOAD_DIR, "extensions_info.json")
    with open(json_path, 'w', encoding='utf-8') as file:
        json.dump(manifests, file, indent=4, ensure_ascii=False)

if __name__ == "__main__":
    category_url = "https://chrome.google.com/webstore/category/extensions"
    extension_ids = get_extension_ids(category_url)
    
    all_manifests = []
    
    for ext_id in extension_ids:
        print(f"Baixando extensão: {ext_id}")
        crx_path = download_extension(ext_id)
        
        if crx_path:
            manifest = extract_manifest(crx_path)
            if manifest:
                name = manifest.get("name", "unknown_extension")
                permissions = manifest.get("permissions", [])
                host_permissions = manifest.get("host_permissions", [])
                manifest_version = manifest.get("manifest_version", "unknown")
                
                all_manifests.append({
                    "id": ext_id,
                    "name": name,
                    "permissions": permissions,
                    "host_permissions": host_permissions,
                    "manifest_version": manifest_version
                })
            os.remove(crx_path)  # Remove o arquivo CRX após extração
    
    save_all_manifests(all_manifests)
